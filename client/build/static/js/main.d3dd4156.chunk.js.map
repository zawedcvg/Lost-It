{"version":3,"sources":["styles/ReportItemPage.module.css","styles/MainPage.module.css","styles/RegisterPage.module.css","styles/UserDashboardPage.module.css","styles/LoginPage.module.css","styles/EditUserDetailsPage.module.css","styles/ListingsPage.module.css","styles/ResetPasswordPage.module.css","styles/ForgotPasswordPage.module.css","styles/LogoutPage.module.css","styles/EmailHasBeenSentForResetPage.module.css","styles/EmailHasBeenSentForActivationPage.module.css","styles/ActivationSuccessfulPage.module.css","styles/Post.module.css","svg-assets/google.svg","pages/MainPage.js","redux/actions/index.js","pages/LoginPage.js","redux/actions/authAction.js","pages/RegisterPage.js","pages/UserDashboardPage.js","redux/reducers/authReducer.js","redux/reducers/tokenReducer.js","redux/reducers/usersReducer.js","redux/reducers/index.js","redux/store.js","pages/EditUserDetailsPage.js","pages/LogoutPage.js","pages/Post.js","pages/ListingsPage.js","pages/EmailHasBeenSentForActivationPage.js","pages/EmailHasBeenSentForResetPage.js","pages/ForgotPasswordPage.js","pages/ResetPasswordPage.js","pages/ResetSuccessfulPage.js","pages/ReportItem.js","pages/PostInfoPage.js","pages/MyPosts.js","pages/SavedPosts.js","pages/UpdatePost.js","pages/ActivationSuccessfulPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","MainPage","history","useHistory","className","charSet","name","content","httpEquiv","MainPageCSS","scroll","first","block","id","middle","slogan","line","second","end","option_body","login_text","button_list","onClick","push","btn_main","ACTIONS","LOGIN","GET_TOKEN","GET_USER","GET_ALL_USERS","initialState","email","password","err","success","LoginPage","useState","user","setUser","dispatch","useDispatch","handleChangeInput","e","target","value","handleSubmit","a","preventDefault","axios","post","res","data","msg","localStorage","setItem","type","console","log","LoginPageCSS","login","form_list","formAction","method","onSubmit","login_label","login_input","onChange","required","btn_login","sign_up","to","forgot","isEmpty","isEmail","test","isSmall","length","isMatch","cf_password","confirmPassword","Register","response","RegisterPageCSS","RegisterPage","signup","label_reg","input_reg","sideform","htmlFor","btn","UserDashBoardPage","useSelector","state","auth","token","users","callback","useEffect","then","get","headers","Authorization","access_token","catch","handleLogout","removeItem","window","location","href","UserDashboardPageCSS","UserDashboardPage","heading","container","top","src","alt","side","btn_entry","user_details","logout","isLogged","isAdmin","authReducer","action","payload","tokenReducer","usersReducer","combineReducers","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","DataProvider","children","EditUserDetailsPage","useParams","handleUpdate","EditUserDetailsPageCSS","edit_details","label_edit_user","for","input_user_details","btn_edit_user","LogoutPage","LogoutPageCSS","thank_you","thank_text","seeusoon","Post","props","PostCSS","img","post_content","time","description","link","likes","ListingsPage","requiredItems","setRequiredItems","toBeDisplayed","setToBeDisplayed","getItemsData","message","getPermissions","componentMounted","itemsData","posts","temp","ListingsPageCSS","scroll_listings","something","listings_text","options_button","i","isLost","bottom_part","listings_body","map","items","date","_id","btn_listings","EmailHasBeenSentForActivation","EmailHasBeenSentForActivationPageCSS","EmailHasBeenSentForActivationPage","email_container","email_sent","check_email","EmailHasBeenSentForResetPage","EmailHasBeenSentForResetPageCSS","scroll_sent_auth","email_auth_container","email_auth_text","ForgotPasswordPage","setData","ForgotPasswordPageCSS","email_reset_container","email_reset_heading","email_label","email_input","btn_reset_email","ResetPasswordPage","alert","ResetPasswordPageCSS","reset_container","reset_heading","password_change","reset_input","btn_reset_password","ResetSuccessfulPage","ReportItem","item","access_res","userInfo","toBeReported","ReportItemCSS","charset","details","reportitem_label","reportitem_input","reportitem_textarea","date_found","small","right","PostInfoPage","isOwner","setIsOwner","setIsLost","saved","setSaved","liked","setLiked","includes","toString","delete","r","patch","MyPosts","SavedPosts","savedPosts","UpdatePost","ActivationSuccessfulPage","activation_token","setErr","setSuccess","activationEmail","ActivationSuccessfulPageCSS","no_scroll","auth_success","auth_success_text","App","path","exact","component","ActivationSucessfulPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3dd4156.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"ReportItemPage_scroll__1nIZA\",\"ReportItem\":\"ReportItemPage_ReportItem__1A8-x\",\"container\":\"ReportItemPage_container__1G0j5\",\"details\":\"ReportItemPage_details__3eZpz\",\"spanbanner\":\"ReportItemPage_spanbanner__2M0Fe\",\"reportitem_label\":\"ReportItemPage_reportitem_label__1yiuB\",\"reportitem_input\":\"ReportItemPage_reportitem_input__30JPM\",\"location\":\"ReportItemPage_location__gKZs0\",\"reportitem_textarea\":\"ReportItemPage_reportitem_textarea__3ay4M\",\"small\":\"ReportItemPage_small__2H1AM\",\"btn\":\"ReportItemPage_btn__17Vt8\",\"right\":\"ReportItemPage_right__2PE31\",\"reportitem_span\":\"ReportItemPage_reportitem_span__3Y9MJ\",\"reportitem_img\":\"ReportItemPage_reportitem_img__nGdxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"MainPage_scroll__2CvM-\",\"block\":\"MainPage_block__302ip\",\"first\":\"MainPage_first__ABIkk\",\"front_text\":\"MainPage_front_text__1_49z\",\"middle\":\"MainPage_middle__Vl7lo\",\"slogan\":\"MainPage_slogan__1aZcW\",\"line\":\"MainPage_line__11l2u\",\"second\":\"MainPage_second__X5nGd\",\"end\":\"MainPage_end__KniQZ\",\"option_body\":\"MainPage_option_body__2CHvK\",\"login_text\":\"MainPage_login_text__2Tfed\",\"button_list\":\"MainPage_button_list__2DxMJ\",\"btn_main\":\"MainPage_btn_main__3NZwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterPage\":\"RegisterPage_RegisterPage__1-tz2\",\"scroll\":\"RegisterPage_scroll__2v_53\",\"signup\":\"RegisterPage_signup__3ziA_\",\"label_reg\":\"RegisterPage_label_reg__3samk\",\"input_reg\":\"RegisterPage_input_reg__2EKLn\",\"form_list\":\"RegisterPage_form_list__2hti1\",\"optional\":\"RegisterPage_optional__33sgk\",\"sideform\":\"RegisterPage_sideform__28lXJ\",\"btn\":\"RegisterPage_btn__C9zNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"UserDashboardPage_scroll__2QFSa\",\"UserDashboardPage\":\"UserDashboardPage_UserDashboardPage__1QPy5\",\"container\":\"UserDashboardPage_container__35X49\",\"heading\":\"UserDashboardPage_heading__1Xvbs\",\"top\":\"UserDashboardPage_top__3y0MK\",\"user_details\":\"UserDashboardPage_user_details__bPQkD\",\"side\":\"UserDashboardPage_side__36d5X\",\"btn_entry\":\"UserDashboardPage_btn_entry__2JBK-\",\"logout\":\"UserDashboardPage_logout__3kjTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginPage\":\"LoginPage_LoginPage__2SHl5\",\"scroll\":\"LoginPage_scroll__2Vxmd\",\"login\":\"LoginPage_login__2FMXB\",\"social\":\"LoginPage_social__29x7w\",\"login_label\":\"LoginPage_login_label__2qL41\",\"login_input\":\"LoginPage_login_input__cOk5h\",\"form_list\":\"LoginPage_form_list__3ZCz-\",\"btn_login\":\"LoginPage_btn_login__39yBL\",\"btn-login\":\"LoginPage_btn-login__1EA96\",\"forgot\":\"LoginPage_forgot__1IFql\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"EditUserDetailsPage_scroll__1maiP\",\"EditUserDetailsPage\":\"EditUserDetailsPage_EditUserDetailsPage__2hZ4A\",\"container\":\"EditUserDetailsPage_container__qbevz\",\"edit_details\":\"EditUserDetailsPage_edit_details__24Qnw\",\"label_edit_user\":\"EditUserDetailsPage_label_edit_user__PB-zq\",\"input_user_details\":\"EditUserDetailsPage_input_user_details__2mCAk\",\"btn_edit_user\":\"EditUserDetailsPage_btn_edit_user__1bx1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll_listings\":\"ListingsPage_scroll_listings__3Rd_b\",\"container\":\"ListingsPage_container__1rEHF\",\"top\":\"ListingsPage_top__3W8iM\",\"listings_text\":\"ListingsPage_listings_text__2s3Fs\",\"options_button\":\"ListingsPage_options_button__1q5w_\",\"bottom_part\":\"ListingsPage_bottom_part__1u3sI\",\"listings_body\":\"ListingsPage_listings_body__C0VpY\",\"btn_listings\":\"ListingsPage_btn_listings__vlH9Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"ResetPasswordPage_scroll__1aUsd\",\"ResetPasswordPage\":\"ResetPasswordPage_ResetPasswordPage__3gskk\",\"reset_container\":\"ResetPasswordPage_reset_container__2vj1m\",\"reset_heading\":\"ResetPasswordPage_reset_heading__2RBwY\",\"password_change\":\"ResetPasswordPage_password_change__17lYX\",\"reset_input\":\"ResetPasswordPage_reset_input__2_5GV\",\"btn_reset_password\":\"ResetPasswordPage_btn_reset_password__1cPWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"ForgotPasswordPage_scroll__2JKh2\",\"ForgotPasswordPage\":\"ForgotPasswordPage_ForgotPasswordPage__2ii9s\",\"email_reset_container\":\"ForgotPasswordPage_email_reset_container__1ROqq\",\"email_reset_heading\":\"ForgotPasswordPage_email_reset_heading__E7AIE\",\"email_label\":\"ForgotPasswordPage_email_label__LzK4c\",\"email_input\":\"ForgotPasswordPage_email_input__1zicO\",\"btn_reset_email\":\"ForgotPasswordPage_btn_reset_email__1bFHd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"LogoutPage_scroll__3Ns_x\",\"LogoutPage\":\"LogoutPage_LogoutPage__27sYu\",\"thank_you\":\"LogoutPage_thank_you__2CheT\",\"thank_text\":\"LogoutPage_thank_text__18x2d\",\"seeusoon\":\"LogoutPage_seeusoon__On648\",\"login\":\"LogoutPage_login__2l1Eq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll_sent_auth\":\"EmailHasBeenSentForResetPage_scroll_sent_auth__otsXi\",\"EmailHasBeenSentForResetPage\":\"EmailHasBeenSentForResetPage_EmailHasBeenSentForResetPage__1ZR-r\",\"email_auth_container\":\"EmailHasBeenSentForResetPage_email_auth_container__Lsa8R\",\"email_auth_text\":\"EmailHasBeenSentForResetPage_email_auth_text__2ekEe\",\"check_email\":\"EmailHasBeenSentForResetPage_check_email__2cP2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EmailHasBeenSentForActivationPage\":\"EmailHasBeenSentForActivationPage_EmailHasBeenSentForActivationPage__30iNH\",\"scroll\":\"EmailHasBeenSentForActivationPage_scroll__2Cm_r\",\"email_container\":\"EmailHasBeenSentForActivationPage_email_container__2yT4a\",\"email_sent\":\"EmailHasBeenSentForActivationPage_email_sent__2UWB2\",\"check_email\":\"EmailHasBeenSentForActivationPage_check_email__jcUKt\",\"return\":\"EmailHasBeenSentForActivationPage_return__2314F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActivationSuccessfulPage\":\"ActivationSuccessfulPage_ActivationSuccessfulPage__2l698\",\"no_scroll\":\"ActivationSuccessfulPage_no_scroll__3zV4u\",\"auth_success\":\"ActivationSuccessfulPage_auth_success__3Jcg6\",\"auth_success_text\":\"ActivationSuccessfulPage_auth_success_text__1UjoL\",\"login\":\"ActivationSuccessfulPage_login__2BnZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_content\":\"Post_post_content__3u0gp\",\"post\":\"Post_post__3HjFL\"};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m512 256c0-16.084-1.509-32.183-4.497-47.813-1.348-7.075-7.544-12.188-14.736-12.188h-235.767c-8.291 0-15 6.709-15 15v90c0 8.291 6.709 15 15 15h120.967c-7.537 15.258-17.924 28.497-30.121 39.635l84.78 84.78c48.781-46.475 79.374-111.875 79.374-184.414z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 120c29.429 0 57.422 9.346 80.947 27.041 5.947 4.468 14.341 3.926 19.614-1.392l64.014-64.014c2.974-2.974 4.57-7.061 4.38-11.265s-2.124-8.13-5.347-10.84c-45.805-38.392-103.916-59.53-163.608-59.53-87.849 0-165.458 44.654-211.337 112.452l88.048 88.048c21.006-47.316 68.268-80.5 123.289-80.5z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 512c57.263 0 109.993-19.2 152.602-51.187l-86.371-86.371c-19.742 11.116-42.306 17.558-66.231 17.558-55.021 0-102.283-33.184-123.289-80.5l-88.048 88.048c45.879 67.798 123.488 112.452 211.337 112.452z\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m122.184 277.605c-1.149-7.079-2.184-14.208-2.184-21.605s1.035-14.526 2.184-21.605l-94.124-94.124c-17.808 34.78-28.06 74.045-28.06 115.729s10.252 80.949 28.061 115.728z\"\n});\n\nfunction SvgGoogle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    enableBackground: \"new 0 0 512 512\",\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    width: 512,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGoogle);\nexport default __webpack_public_path__ + \"static/media/google.173162ae.svg\";\nexport { ForwardRef as ReactComponent };","import MetaTags from \"react-meta-tags\";\nimport { ReactComponent as Logo } from \"../svg-assets/google.svg\";\nimport MainPageCSS from \"../styles/MainPage.module.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MainPage = () => {\n    // const logostyle = { width: \"25px\", height: \"25px\", textAlign: \"center\" };\n\n    let history = useHistory();\n\n    const handleLoginClick = () => {\n        history.push(\"/login\");\n    };\n\n    const handleSignUpClick = () => {\n        history.push(\"/register\");\n    };\n\n    return (\n        <div className=\"MainPage\">\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n                    initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>Document</title>\n            </MetaTags>\n\n            <div className={MainPageCSS.scroll}>\n                <section\n                    className={`${MainPageCSS.first} ${MainPageCSS.block}`}\n                ></section>\n                <section\n                    id=\"middlepage\"\n                    className={`${MainPageCSS.block} ${MainPageCSS.middle}`}\n                >\n                    <section className={MainPageCSS.slogan}>\n                        <h1\n                            className={`${MainPageCSS.first} ${MainPageCSS.line}`}\n                        >\n                            Can't find something?\n                        </h1>\n                        <h1\n                            className={`${MainPageCSS.second} ${MainPageCSS.line}`}\n                        >\n                            We're here to help!\n                        </h1>\n                    </section>\n                </section>\n                <section\n                    id=\"login_options\"\n                    className={`${MainPageCSS.block} ${MainPageCSS.end}`}\n                >\n                    <div className={MainPageCSS.option_body}>\n                        <h1 className={MainPageCSS.login_text}>\n                            Lost It - a digitized lost & found, right with you\n                        </h1>\n                        <section className={MainPageCSS.button_list}>\n                            <form>\n                                <button\n                                    onClick={handleSignUpClick}\n                                    className={MainPageCSS.btn_main}\n                                >\n                                    Sign Me Up!\n                                </button>\n                            </form>\n                            <form>\n                                <button\n                                    onClick={handleLoginClick}\n                                    className={MainPageCSS.btn_main}\n                                >\n                                    Log In.\n                                </button>\n                            </form>\n                        </section>\n                    </div>\n                </section>\n            </div>\n        </div>\n    );\n};\n\nexport default MainPage;\n","const ACTIONS = {\n    LOGIN: \"LOGIN\",\n    GET_TOKEN: \"GET_TOKEN\",\n    GET_USER: \"GET_USER\",\n    GET_ALL_USERS: \"GET_ALL_USERS\",\n};\n\nexport default ACTIONS;\n","import React, { useState } from \"react\";\nimport LoginPageCSS from \"../styles/LoginPage.module.css\";\nimport MetaTags from \"react-meta-tags\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { dispatchLogin } from \"../redux/actions/authAction\";\nimport { useDispatch } from \"react-redux\";\n// import { GoogleLogin } from \"react-google-login\";\n// import FacebookLogin from 'react-facebook-login';\n\nconst initialState = {\n    email: \"\",\n    password: \"\",\n    err: \"\",\n    success: \"\",\n};\n\nfunction LoginPage() {\n    const [user, setUser] = useState(initialState);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { email, password, err, success } = user;\n\n    const handleChangeInput = (e) => {\n        const { name, value } = e.target;\n        setUser({ ...user, [name]: value, err: \"\", success: \"\" });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const res = await axios.post(\"https://lost-it.herokuapp.com/user/login\", {\n                email,\n                password,\n            });\n            setUser({ ...user, err: \"\", success: res.data.msg });\n\n            localStorage.setItem(\"firstLogin\", true);\n\n            dispatch(dispatchLogin());\n            history.push(\"/userdashboard\");\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    // const responseGoogle = async (response) => {\n    //     try {\n    //         const res = await axios.post(\"/user/google_login\", {\n    //             tokenId: response.tokenId,\n    //         });\n\n    //         setUser({ ...user, error: \"\", success: res.data.msg });\n    //         localStorage.setItem(\"firstLogin\", true);\n\n    //         dispatch(dispatchLogin());\n    //         history.push(\"/\");\n    //     } catch (err) {\n    //         err.response.data.msg &&\n    //             setUser({ ...user, err: err.response.data.msg, success: \"\" });\n    //     }\n    // };\n\n    // const responseFacebook = async (response) => {\n    //     try {\n    //         const { accessToken, userID } = response;\n    //         const res = await axios.post(\"/user/facebook_login\", {\n    //             accessToken,\n    //             userID,\n    //         });\n\n    //         setUser({ ...user, error: \"\", success: res.data.msg });\n    //         localStorage.setItem(\"firstLogin\", true);\n\n    //         dispatch(dispatchLogin());\n    //         history.push(\"/\");\n    //     } catch (err) {\n    //         err.response.data.msg &&\n    //             setUser({ ...user, err: err.response.data.msg, success: \"\" });\n    //     }\n    // };\n\n    return (\n        <div className={LoginPageCSS.LoginPage}>\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n                    initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>Document</title>\n            </MetaTags>\n\n            <div className={LoginPageCSS.scroll}>\n                <h1 className={LoginPageCSS.login}>Log In</h1>\n                <div className={LoginPageCSS.form_list}>\n                    <form\n                        formAction=\"signin\"\n                        method=\"post\"\n                        onSubmit={handleSubmit}\n                    >\n                        <label className={LoginPageCSS.login_label}>\n                            Email Address:{\" \"}\n                            <input\n                                className={LoginPageCSS.login_input}\n                                name=\"email\"\n                                type=\"text\"\n                                value={email}\n                                onChange={handleChangeInput}\n                                required\n                            />\n                        </label>\n                        <label\n                            className={`${LoginPageCSS.password} ${LoginPageCSS.login_label}`}\n                        >\n                            Password:{\" \"}\n                            <input\n                                className={LoginPageCSS.login_input}\n                                name=\"password\"\n                                value={password}\n                                onChange={handleChangeInput}\n                                type=\"password\"\n                                required\n                            />\n                        </label>\n\n                        <button\n                            className={LoginPageCSS.btn_login}\n                            type=\"form\"\n                            id=\"something\"\n                        >\n                            Log In\n                        </button>\n                    </form>\n                </div>\n\n                <br />\n                <span> New User? </span>\n                <Link className={LoginPageCSS.sign_up} to=\"/register\">\n                    Sign Up here\n                </Link>\n                <br />\n                <br />\n                <Link className={LoginPageCSS.forgot} to=\"/forgotpassword\">\n                    Forgot your password?\n                </Link>\n            </div>\n            <br />\n\n            {/* <div className={LoginPageCSS.social}>\n                <GoogleLogin\n                    clientId=\"209721098919-5joiqq888tl1vd0uh0434tolb0jrnrnc.apps.googleusercontent.com\"\n                    buttonText=\"Login with Google\"\n                    onSuccess={responseGoogle}\n                    cookiePolicy={\"single_host_origin\"}\n                /> */}\n\n            {/* <FacebookLogin\n            appId=\"Your facebook app id\"\n            autoLoad={false}\n            fields=\"name,email,picture\"\n            callback={responseFacebook}\n            /> */}\n            {/* </div> */}\n        </div>\n    );\n}\n\nexport default LoginPage;\n","import ACTIONS from \"./index\";\nimport axios from \"axios\";\n\nexport const dispatchLogin = () => {\n    return {\n        type: ACTIONS.LOGIN,\n    };\n};\n\nexport const fetchUser = async (token) => {\n    const res = await axios.get(\"/user/info\", {\n        headers: { Authorization: token },\n    });\n    return res;\n};\n\nexport const dispatchGetUser = (res) => {\n    return {\n        type: ACTIONS.GET_USER,\n        payload: {\n            user: res.data,\n            isAdmin: res.data.role === 1 ? true : false,\n        },\n    };\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { toast, ToastContainer } from \"react-toastify\";\nimport axios from \"axios\";\nimport RegisterPageCSS from \"../styles/RegisterPage.module.css\";\nimport MetaTags from \"react-meta-tags\";\nimport { useHistory } from \"react-router-dom\";\n\nconst isEmpty = (value) => {\n    if (!value) return true;\n    return false;\n};\n\nconst isEmail = (email) => {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n};\n\nconst isSmall = (password) => {\n    if (password.length < 6) return true;\n    return false;\n};\n\nconst isMatch = (password, cf_password) => {\n    if (password === cf_password) return true;\n    return false;\n};\n\nconst initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    err: \"\",\n    success: \"\",\n};\n\nconst Register = () => {\n    const [user, setUser] = useState(initialState);\n\n    const { name, email, password, confirmPassword, err, success } = user;\n\n    const handleChangeInput = (e) => {\n        const { name, value } = e.target;\n        setUser({ ...user, [name]: value, err: \"\", success: \"\" });\n        //console.log(user);\n    };\n\n    const history = useHistory();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (isEmpty(name) || isEmpty(password)) {\n            //toast.error(\"Please fill in all fields.\");\n\n            return setUser({\n                ...user,\n                err: \"Please fill in all fields.\",\n                success: \"\",\n            });\n        }\n\n        if (!isEmail(email)) {\n            // toast.error(\"Invalid email address.\");\n            return setUser({\n                ...user,\n                err: \"Invalid email address.\",\n                success: \"\",\n            });\n        }\n\n        if (isSmall(password)) {\n            // toast.error(\"Password must be at least 6 characters.\");\n            return (\n                setUser({\n                    ...user,\n                    err: \"Password must be at least 6 characters.\",\n                    success: \"\",\n                }) & console.log(user.err)\n            );\n        }\n\n        if (!isMatch(password, confirmPassword)) {\n            // toast.error(\"Passwords did not match.\");\n            return (\n                setUser({\n                    ...user,\n                    err: \"Passwords did not match.\",\n                    success: \"\",\n                }) & console.log(user.err)\n            );\n        }\n\n        try {\n            const res = await axios.post(\"https://lost-it.herokuapp.com/user/register\", {\n                name,\n                email,\n                password,\n            });\n\n            console.log(res);\n            setUser({ ...user, err: \"\", success: res.data.msg });\n            history.push(\"/emailhasbeensentforactivation\");\n            // toast.success(res.data.msg);\n        } catch (err) {\n            err.response.data.msg &&\n                setUser({ ...user, err: err.response.data.msg, success: \"\" });\n        }\n    };\n\n    return (\n        <div className={RegisterPageCSS.RegisterPage}>\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n                    initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>Registration</title>\n            </MetaTags>\n            <div className={RegisterPageCSS.scroll}>\n                <h1 className={RegisterPageCSS.signup}>Sign Up</h1>\n                <div className={RegisterPageCSS.form_list}>\n                    <form\n                        formAction=\"signup\"\n                        onSubmit={handleSubmit}\n                        method=\"post\"\n                        id=\"form\"\n                    >\n                        <label className={RegisterPageCSS.label_reg}>\n                            Name:\n                            <input\n                                className={RegisterPageCSS.input_reg}\n                                onChange={handleChangeInput}\n                                name=\"name\"\n                                type=\"text\"\n                                value={name}\n                                id=\"name\"\n                            />\n                        </label>\n                        {/* <label className={RegisterPageCSS.label_reg}>\n                            Telegram Id:{\" \"}\n                            <span className={RegisterPageCSS.optional}>\n                                (optional)\n                            </span>\n                            <input\n                                className={RegisterPageCSS.input_reg}\n                                name=\"Telegram Id\"\n                                type=\"text\"\n                            />\n                        </label> */}\n                        <label className={RegisterPageCSS.label_reg}>\n                            Email Address:\n                            <input\n                                className={RegisterPageCSS.input_reg}\n                                onChange={handleChangeInput}\n                                name=\"email\"\n                                type=\"email\"\n                                id=\"email\"\n                                value={email}\n                            />\n                        </label>\n\n                        <label\n                            className={`${RegisterPageCSS.sideform} ${RegisterPageCSS.label_reg}`}\n                            htmlFor=\"password\"\n                        >\n                            Password:\n                            <input\n                                id=\"password\"\n                                value={password}\n                                className={RegisterPageCSS.input_reg}\n                                name=\"password\"\n                                onChange={handleChangeInput}\n                                type=\"password\"\n                            />\n                        </label>\n\n                        <label\n                            className={`${RegisterPageCSS.sideform} ${RegisterPageCSS.label_reg}`}\n                            htmlFor=\"confirmPassword\"\n                        >\n                            Confirm Password\n                            <input\n                                type=\"password\"\n                                className={RegisterPageCSS.input_reg}\n                                id=\"confirmPassword\"\n                                value={confirmPassword}\n                                name=\"confirmPassword\"\n                                onChange={handleChangeInput}\n                            />\n                        </label>\n\n                        {/* <label\n                            className={`${RegisterPageCSS.sideform} ${RegisterPageCSS.label_reg}`}\n                        >\n                            Re-enter Password:\n                            <input\n                                className={RegisterPageCSS.input_reg}\n                                name=\"confirmPassword\"\n                                type=\"password\"\n                            />\n                        </label> */}\n\n                        <button\n                            className={RegisterPageCSS.btn}\n                            type=\"form\"\n                            id=\"something\"\n                        >\n                            Sign Up\n                        </button>\n                    </form>\n                </div>\n                <span>Already have an account? </span>\n                <Link className={RegisterPageCSS.sign_up} to=\"/login\">\n                    Login here\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Register;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MetaTags from \"react-meta-tags\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport UserDashboardPageCSS from \"../styles/UserDashboardPage.module.css\";\n//import {showSuccessMsg, showErrMsg} from '../../utils/notification/Notification'\nimport {\n    fetchAllUsers,\n    dispatchGetAllUsers,\n} from \"../redux/actions/usersAction\";\n\nconst isSmall = (password) => {\n    if (password.length < 6) return true;\n    return false;\n};\n\nconst isMatch = (password, cf_password) => {\n    if (password === cf_password) return true;\n    return false;\n};\n\nconst initialState = {\n    name: \"\",\n    password: \"\",\n    cf_password: \"\",\n    err: \"\",\n    success: \"\",\n};\n\nfunction UserDashBoardPage() {\n    const auth = useSelector((state) => state.auth);\n    const token = useSelector((state) => state.token);\n\n    const users = useSelector((state) => state.users);\n\n    // const { user, isAdmin } = auth;\n    const [user, setUser] = useState({});\n    const [data, setData] = useState(initialState);\n    const { name, password, cf_password, err, success } = data;\n\n    const [avatar, setAvatar] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [callback, setCallback] = useState(false);\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        axios\n            .post(\"https://lost-it.herokuapp.com/user/refresh_token\")\n            .then((response) => {\n                axios\n                    .get(\"https://lost-it.herokuapp.com/user/info\", {\n                        headers: {\n                            Authorization: response.data.access_token,\n                        },\n                    })\n                    .then((res) => {\n                        setUser(res.data);\n                    })\n                    .catch((err) => console.log(err));\n            })\n            .catch((err) => console.log(err));\n        // if (isAdmin) {\n        //     fetchAllUsers(token).then((res) => {\n        //         dispatch(dispatchGetAllUsers(res));\n        //     });\n        // }\n    }, [token, dispatch, callback]);\n\n    // const handleChange = (e) => {\n    //     const { name, value } = e.target;\n    //     setData({ ...data, [name]: value, err: \"\", success: \"\" });\n    // };\n\n    // const changeAvatar = async (e) => {\n    //     e.preventDefault();\n    //     try {\n    //         const file = e.target.files[0];\n\n    //         if (!file)\n    //             return setData({\n    //                 ...data,\n    //                 err: \"No files were uploaded.\",\n    //                 success: \"\",\n    //             });\n\n    //         if (file.size > 1024 * 1024)\n    //             return setData({\n    //                 ...data,\n    //                 err: \"Size too large.\",\n    //                 success: \"\",\n    //             });\n\n    //         if (file.type !== \"image/jpeg\" && file.type !== \"image/png\")\n    //             return setData({\n    //                 ...data,\n    //                 err: \"File format is incorrect.\",\n    //                 success: \"\",\n    //             });\n\n    //         let formData = new FormData();\n    //         formData.append(\"file\", file);\n\n    //         setLoading(true);\n    //         const res = await axios.post(\"/api/upload_avatar\", formData, {\n    //             headers: {\n    //                 \"content-type\": \"multipart/form-data\",\n    //                 Authorization: token,\n    //             },\n    //         });\n\n    //         setLoading(false);\n    //         setAvatar(res.data.url);\n    //     } catch (err) {\n    //         setData({ ...data, err: err.response.data.msg, success: \"\" });\n    //     }\n    // };\n\n    // const updateInfo = () => {\n    //     try {\n    //         axios.patch(\n    //             \"/user/update\",\n    //             {\n    //                 name: name ? name : user.name,\n    //                 avatar: avatar ? avatar : user.avatar,\n    //             },\n    //             {\n    //                 headers: { Authorization: token },\n    //             }\n    //         );\n\n    //         setData({ ...data, err: \"\", success: \"Updated Success!\" });\n    //     } catch (err) {\n    //         setData({ ...data, err: err.response.data.msg, success: \"\" });\n    //     }\n    // };\n\n    const handleLogout = async () => {\n        try {\n            console.log(1);\n\n            console.log(2);\n            const res = await axios.post(\"https://lost-it.herokuapp.com/user/logout\");\n            console.log(res);\n            localStorage.removeItem(\"firstLogin\");\n            window.location.href = \"/logout\";\n\n            console.log(3);\n\n            //history.push(\"/logout\");\n        } catch (err) {\n            console.log(\"errrrr\");\n            //window.location.href = \"/logout\";\n        }\n    };\n\n    // const updatePassword = () => {\n    //     if (isSmall(password))\n    //         return setData({\n    //             ...data,\n    //             err: \"Password must be at least 6 characters.\",\n    //             success: \"\",\n    //         });\n\n    //     if (!isMatch(password, cf_password))\n    //         return setData({\n    //             ...data,\n    //             err: \"Password did not match.\",\n    //             success: \"\",\n    //         });\n\n    //     try {\n    //         axios.post(\n    //             \"/user/reset\",\n    //             { password },\n    //             {\n    //                 headers: { Authorization: token },\n    //             }\n    //         );\n\n    //         setData({ ...data, err: \"\", success: \"Updated Success!\" });\n    //     } catch (err) {\n    //         setData({ ...data, err: err.response.data.msg, success: \"\" });\n    //     }\n    // };\n\n    // const handleUpdate = () => {\n    //     if (name || avatar) updateInfor();\n    //     if (password) updatePassword();\n    // };\n\n    const handletemp = () => {\n        history.push(\"/\");\n    };\n\n    // const handleDelete = async (id) => {\n    //     try {\n    //         if (user._id !== id) {\n    //             if (\n    //                 window.confirm(\n    //                     \"Are you sure you want to delete this account?\"\n    //                 )\n    //             ) {\n    //                 setLoading(true);\n    //                 await axios.delete(`/user/delete/${id}`, {\n    //                     headers: { Authorization: token },\n    //                 });\n    //                 setLoading(false);\n    //                 setCallback(!callback);\n    //             }\n    //         }\n    //     } catch (err) {\n    //         setData({ ...data, err: err.response.data.msg, success: \"\" });\n    //     }\n    // };\n\n    return (\n        <div className={UserDashboardPageCSS.UserDashboardPage}>\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n    initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>User</title>\n            </MetaTags>\n            <div className={UserDashboardPageCSS.scroll}>\n                <h1 className={UserDashboardPageCSS.heading}>User Dashboard</h1>\n                <div className={UserDashboardPageCSS.container}>\n                    <div className={UserDashboardPageCSS.top}>\n                        <img\n                            src=\"https://source.unsplash.com/random/300x300\"\n                            alt=\"***random***\"\n                        />\n                        <form className={UserDashboardPageCSS.side}>\n                            {/* <button\n                                onClick={(e) =>\n                                    history.push(\"/edituserdetails\")\n                                }\n                                className={UserDashboardPageCSS.btn_entry}\n                            >\n                                Edit Details\n                            </button> */}\n                            <button\n                                onClick={(e) => history.push(\"/listings\")}\n                                className={UserDashboardPageCSS.btn_entry}\n                            >\n                                View listings\n                            </button>\n                            <button\n                                onClick={(e) => history.push(\"/reportitem\")}\n                                className={UserDashboardPageCSS.btn_entry}\n                            >\n                                Report item\n                            </button>\n                            <button\n                                className={UserDashboardPageCSS.btn_entry}\n                                onClick={(e) => history.push(\"/myposts\")}\n                            >\n                                View my posts\n                            </button>\n                            <button\n                                className={UserDashboardPageCSS.btn_entry}\n                                onClick={(e) => history.push(\"/savedposts\")}\n                            >\n                                View saved posts\n                            </button>\n                        </form>\n                    </div>\n                    <div\n                        className={UserDashboardPageCSS.user_details}\n                        id=\"userinfo\"\n                    >\n                        <p id=\"userinfo\">\n                            {user.name}\n                            <br />\n                            {user.email}\n                        </p>\n                        <form onSubmit={handleLogout}>\n                            <button\n                                onClick={handleLogout}\n                                className={`${UserDashboardPageCSS.btn_entry} ${UserDashboardPageCSS.logout}`}\n                            >\n                                Logout\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default UserDashBoardPage;\n","import ACTIONS from \"../actions/\";\n\nconst initialState = {\n    user: [],\n    isLogged: false,\n    isAdmin: false,\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTIONS.LOGIN:\n            return {\n                ...state,\n                isLogged: true,\n            };\n        case ACTIONS.GET_USER:\n            return {\n                ...state,\n                user: action.payload.user,\n                isAdmin: action.payload.isAdmin,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;\n","import ACTIONS from \"../actions/\";\n\nconst token = \"\";\n\nconst tokenReducer = (state = token, action) => {\n    switch (action.type) {\n        case ACTIONS.GET_TOKEN:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default tokenReducer;\n","import ACTIONS from \"../actions/\";\n\nconst users = [];\n\nconst usersReducer = (state = users, action) => {\n    switch (action.type) {\n        case ACTIONS.GET_ALL_USERS:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default usersReducer;\n","import { combineReducers } from \"redux\";\nimport auth from \"./authReducer\";\nimport token from \"./tokenReducer\";\nimport users from \"./usersReducer\";\n\nexport default combineReducers({\n    auth,\n    token,\n    users,\n});\n","import React from \"react\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers/\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nfunction DataProvider({ children }) {\n    return <Provider store={store}>{children}</Provider>;\n}\n\nexport default DataProvider;\n","/* eslint-disable */\n// stashed no use\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport MetaTags from \"react-meta-tags\";\nimport EditUserDetailsPageCSS from \"../styles/EditUserDetailsPage.module.css\";\n\nfunction EditUserDetailsPage() {\n    const { id } = useParams();\n    const history = useHistory();\n    const [user, setUser] = useState([]);\n\n    const [err, setErr] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    const handleUpdate = async () => {\n        try {\n        } catch (err) {\n            err.response.data.msg && setErr(err.response.data.msg);\n        }\n    };\n\n    return (\n        <div className={EditUserDetailsPageCSS.EditUserDetailsPage}>\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n                    initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>Edit User-Details</title>\n            </MetaTags>\n            <div className={EditUserDetailsPageCSS.scroll}>\n                <div className={EditUserDetailsPageCSS.container}>\n                    <h1 className={EditUserDetailsPageCSS.edit_details}>\n                        Edit user details\n                    </h1>\n                    <form>\n                        <label\n                            className={EditUserDetailsPageCSS.label_edit_user}\n                            for=\"name\"\n                        >\n                            Name :\n                            <input\n                                className={\n                                    EditUserDetailsPageCSS.input_user_details\n                                }\n                                type=\"text\"\n                            />\n                        </label>\n                        <label\n                            className={EditUserDetailsPageCSS.label_edit_user}\n                            for=\"teleId\"\n                        >\n                            Telegram Id :\n                            <input\n                                className={\n                                    EditUserDetailsPageCSS.input_user_details\n                                }\n                                type=\"text\"\n                            />\n                        </label>\n                        <label\n                            className={EditUserDetailsPageCSS.label_edit_user}\n                            for=\"email\"\n                        >\n                            Email Address :\n                            <input\n                                className={\n                                    EditUserDetailsPageCSS.input_user_details\n                                }\n                                type=\"email\"\n                            />\n                        </label>\n                    </form>\n                    <button\n                        onClick={handleUpdate}\n                        className={EditUserDetailsPageCSS.btn_edit_user}\n                    >\n                        Apply Changes\n                    </button>\n                    <button\n                        onClick={(e) => history.push(\"/userdashboard\")}\n                        className={EditUserDetailsPageCSS.btn_edit_user}\n                    >\n                        Discard Changes\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default EditUserDetailsPage;\n","import LogoutPageCSS from \"../styles/LogoutPage.module.css\";\nimport MetaTags from \"react-meta-tags\";\nimport { Link } from \"react-router-dom\";\n\nconst LogoutPage = () => {\n    return (\n        <div className={LogoutPageCSS.LogoutPage}>\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n                    initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>Logout</title>\n            </MetaTags>\n            <div\n                className={`${LogoutPageCSS.scroll} ${LogoutPageCSS.thank_you}`}\n            >\n                <div className={LogoutPageCSS.thank_text}>\n                    <h1>\n                        Thank you for using our service!\n                        <br />\n                        <span className={LogoutPageCSS.seeusoon}>\n                            See you soon.\n                        </span>\n                    </h1>\n                    <span className={LogoutPageCSS.login}>\n                        Click here to <Link to=\"/login\">Log Back In</Link>\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LogoutPage;\n","import PostCSS from \"../styles/Post.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Post = (props) => {\n    return (\n        <div className={PostCSS.post} type={props.type}>\n            <img src={props.img} alt=\"\" />\n            <div className={PostCSS.post_content}>\n                <span>\n                    Name: {props.name} <br />\n                </span>\n                <span>\n                    Approximate time: {props.time} <br />\n                </span>\n                <span>\n                    Location: {props.location}\n                    <br />\n                </span>\n                <span>\n                    Description: {props.description} <br />\n                </span>\n                <span>\n                    <Link to={`/post/${props.link}`}>More info</Link> <br />\n                </span>\n                <span>Likes : {props.likes ? props.likes.length : 0}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Post;\n\n","import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport ListingsPageCSS from \"../styles/ListingsPage.module.css\";\nimport Post from \"./Post\";\n\nconst ListingsPage = () => {\n    const [requiredItems, setRequiredItems] = useState([]);\n    const [toBeDisplayed, setToBeDisplayed] = useState([]);\n\n    const getItemsData = async (token) => {\n        try {\n            const {data} = await axios.get(\"https://lost-it.herokuapp.com/listings/posts\", {\n                headers: {\n                    Authorization: token\n                }\n            });\n            return data;\n        } catch (err) {\n            console.log(err.message);\n        }\n    }\n\n    const getPermissions = async () => {\n        try {\n            const {data} = await axios.post(\"https://lost-it.herokuapp.com/user/refresh_token\");\n            return data.access_token;    \n        } catch (err) {\n            console.log(err.message);\n        }   \n    }\n\n    let componentMounted = true;\n\n    useEffect(() => {\n        const temp = async () => {\n            const token = await getPermissions();\n            const itemsData = await getItemsData(token);\n\n            if (componentMounted) {\n                setRequiredItems(itemsData.posts);\n            }\n            // console.log(itemsData)\n            return () => {\n                componentMounted = false;\n            };\n        }\n        temp();\n    }, [])\n\n    // useEffect(() => {\n    //     axios.post(\"/user/refresh_token\")\n    //         .then(res => {\n    //             axios.get(\"/listings/posts\", {\n    //                 headers : {\n    //                     Authorization : res.data.access_token\n    //                 }\n    //             }).then(response => {\n    //                 setToBeDisplayed(response.data.posts);\n    //                 setRequiredItems(response.data.posts);\n    //             }).catch(err => {\n    //                 console.log(err)\n    //             })\n    //         }).catch(err => console.log(err))\n    // })\n\n    const history = useHistory();\n\n    const obtainListings = e => {\n        const temp = []; \n        for (let i = 0; i < requiredItems.length; i++) {\n            temp.push(requiredItems[i]);\n        }\n        setToBeDisplayed(temp);\n    };\n\n    const handleLost = e => {\n        const temp = []; \n        for (let i = 0; i < requiredItems.length; i++) {\n            if (requiredItems[i].isLost) {\n                temp.push(requiredItems[i]);\n            }\n        }\n        setToBeDisplayed(temp);\n    }\n\n    const handleRecovered = e => {\n        const temp = []; \n        for (let i = 0; i < requiredItems.length; i++) {\n            if (!requiredItems[i].isLost) {\n                temp.push(requiredItems[i]);\n            }\n        }\n        setToBeDisplayed(temp);\n    }\n\n    return (\n        <div className={ListingsPageCSS.scroll_listings}>\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n        initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>Document</title>\n            </MetaTags>\n            <div className={ListingsPageCSS.container}>\n                <div\n                    className={ListingsPageCSS.top}\n                    id={ListingsPageCSS.something}\n                >\n                    <h1 className={ListingsPageCSS.listings_text}>Listings</h1>\n                    <nav>\n                        <button\n                            className={ListingsPageCSS.options_button}\n                            onClick={handleLost}\n                        >\n                            Lost\n                        </button>\n                        <button\n                            onClick={handleRecovered}\n                            className={ListingsPageCSS.options_button}\n                        >\n                            Recovered\n                        </button>\n                        <button\n                            onClick={obtainListings}\n                            className={ListingsPageCSS.options_button}\n                        >\n                            Both\n                        </button>\n                    </nav>\n                </div>\n                <div className={ListingsPageCSS.bottom_part}>\n                    <div className={ListingsPageCSS.listings_body}>\n                        {\n                            (toBeDisplayed || requiredItems).map((items) => (\n                                <Post\n                                    key={items._id}\n                                    type={items.type}\n                                    img={items.img}\n                                    date={items.date}\n                                    time={items.time}\n                                    location={items.location}\n                                    description={items.description}\n                                    link={items._id}\n                                    likes={items.likes}\n                                />\n                            ))\n                        }\n                        \n                    </div>\n                    <form>\n                        <button className={ListingsPageCSS.btn_listings} onClick={e => history.push(\"/reportitem\")}>\n                            Make a report\n                        </button>\n                        <button className={ListingsPageCSS.btn_listings} onClick={e => history.push(\"/userdashboard\")}>\n                            Go back\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ListingsPage;\n","import MetaTags from \"react-meta-tags\";\nimport EmailHasBeenSentForActivationPageCSS from \"../styles/EmailHasBeenSentForActivationPage.module.css\";\n\nfunction EmailHasBeenSentForActivation() {\n    return (\n        <div\n            className={\n                EmailHasBeenSentForActivationPageCSS.EmailHasBeenSentForActivationPage\n            }\n        >\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n                    initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>Document</title>\n            </MetaTags>\n            <div\n                className={EmailHasBeenSentForActivationPageCSS.email_container}\n            >\n                <h1 className={EmailHasBeenSentForActivationPageCSS.email_sent}>\n                    Email has been <br />\n                    sent for activation\n                </h1>\n                <span\n                    className={EmailHasBeenSentForActivationPageCSS.check_email}\n                >\n                    Please check your email\n                </span>\n            </div>\n        </div>\n    );\n}\n\nexport default EmailHasBeenSentForActivation;\n","import MetaTags from \"react-meta-tags\";\nimport EmailHasBeenSentForResetPageCSS from \"../styles/EmailHasBeenSentForResetPage.module.css\";\n\nconst EmailHasBeenSentForResetPage = () => {\n    return (\n        <div\n            className={\n                EmailHasBeenSentForResetPageCSS.EmailHasBeenSentForResetPage\n            }\n        >\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n                    initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>Document</title>\n            </MetaTags>\n\n            <div className={EmailHasBeenSentForResetPageCSS.scroll_sent_auth}>\n                <div\n                    className={\n                        EmailHasBeenSentForResetPageCSS.email_auth_container\n                    }\n                >\n                    <h1\n                        className={\n                            EmailHasBeenSentForResetPageCSS.email_auth_text\n                        }\n                    >\n                        Email has been sent <br />\n                        to reset your password\n                    </h1>\n                    <span\n                        className={EmailHasBeenSentForResetPageCSS.check_email}\n                    >\n                        Please check your email\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EmailHasBeenSentForResetPage;\n","import { MetaTags } from \"react-meta-tags\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport ForgotPasswordPageCSS from \"../styles/ForgotPasswordPage.module.css\";\n\nconst isEmail = (email) => {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n};\n\nconst initialState = {\n    email: \"\",\n    err: \"\",\n    success: \"\",\n};\n\nfunction ForgotPasswordPage() {\n    const [data, setData] = useState(initialState);\n\n    const { email, err, success } = data;\n    const history = useHistory();\n\n    const handleChangeInput = (e) => {\n        const { name, value } = e.target;\n        setData({ ...data, [name]: value, err: \"\", success: \"\" });\n        console.log(data);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!isEmail(email)) {\n            return setData({ ...data, err: \"Invalid emails.\", success: \"\" });\n        }\n        console.log(err);\n\n        try {\n            const res = await axios.post(\"https://lost-it.herokuapp.com/user/forgot\", { email });\n\n            setData({ ...data, err: \"\", success: res.data.msg });\n            history.push(\"/emailhasbeensentforreset\");\n        } catch (err) {\n            err.response.data.msg &&\n                setData({ ...data, err: err.response.data.msg, success: \"\" });\n        }\n    };\n\n    return (\n        <div className={ForgotPasswordPageCSS.ForgotPasswordPage}>\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n                    initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>Document</title>\n            </MetaTags>\n            <div className={ForgotPasswordPageCSS.scroll}>\n                <div className={ForgotPasswordPageCSS.email_reset_container}>\n                    <h1 className={ForgotPasswordPageCSS.email_reset_heading}>\n                        Email for resetting password\n                    </h1>\n\n                    <form\n                        formAction=\"enter email for reset\"\n                        onSubmit={handleSubmit}\n                    >\n                        <label\n                            className={ForgotPasswordPageCSS.email_label}\n                            htmlFor=\"email\"\n                        >\n                            Email:\n                            <input\n                                className={ForgotPasswordPageCSS.email_input}\n                                onChange={handleChangeInput}\n                                value={email}\n                                name=\"email\"\n                                type=\"email\"\n                            />\n                        </label>\n                        <button\n                            className={ForgotPasswordPageCSS.btn_reset_email}\n                            type=\"submit\"\n                        >\n                            Submit\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ForgotPasswordPage;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport MetaTags from \"react-meta-tags\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport ResetPasswordPageCSS from \"../styles/ResetPasswordPage.module.css\";\n\nconst isSmall = (password) => {\n    if (password.length < 6) return true;\n    return false;\n};\n\nconst isMatch = (password, confirmPassword) => {\n    if (password === confirmPassword) return true;\n    return false;\n};\n\nconst initialState = {\n    password: \"\",\n    confirmPassword: \"\",\n    err: \"\",\n    success: \"\",\n};\n\nfunction ResetPasswordPage() {\n    const [data, setData] = useState(initialState);\n    const { id } = useParams();\n    const history = useHistory();\n\n    const { password, confirmPassword, err, success } = data;\n\n    const handleChangeInput = (e) => {\n        const { name, value } = e.target;\n        setData({ ...data, [name]: value, err: \"\", success: \"\" });\n        console.log(data);\n    };\n\n    const handleSubmit = async () => {\n        // if (isSmall(password))\n        //     return setData({\n        //         ...data,\n        //         err: \"Password must be at least 6 characters.\",\n        //         success: \"\",\n        //     });\n\n        // if (!isMatch(password, confirmPassword))\n        //     return setData({\n        //         ...data,\n        //         err: \"Password did not match.\",\n        //         success: \"\",\n        //     });\n\n        await axios.post(\"https://lost-it.herokuapp.com/user/reset\", {\"password\" : password}, {\n            headers : {\n                Authorization : id\n            }\n        }).then(response => {\n            alert(response.data.msg)\n            history.push(\"/resetsuccessful\")\n        }).catch(err => console.log(err))\n\n        // try {\n        //     console.log(\"******\")\n        //     const res = await axios.post(\n        //         \"/user/reset\",\n        //         { \"password\" : password },\n        //         {\n        //             headers: { Authorization: id },\n        //         }\n        //     );\n\n        //     console.log(res);\n\n        //     setData({ ...data, err: \"\", success: res.data.msg });\n        //     history.push(\"/resetsuccessful\");\n        // } catch (err) {\n        //     console.log(err.response.data.msg)\n        // }\n    };\n\n    return (\n        <div className={ResetPasswordPageCSS.ResetPasswordPage}>\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n                    initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>Document</title>\n            </MetaTags>\n            <div className={ResetPasswordPageCSS.scroll}>\n                <div className={ResetPasswordPageCSS.reset_container}>\n                    <h1 className={ResetPasswordPageCSS.reset_heading}>\n                        Reset your password\n                    </h1>\n                    <form formAction=\"changepassword\" onSubmit={handleSubmit}>\n                        <label\n                            className={ResetPasswordPageCSS.password_change}\n                            htmlFor=\"password\"\n                        >\n                            Password:\n                            <input\n                                className={ResetPasswordPageCSS.reset_input}\n                                name=\"password\"\n                                onChange={handleChangeInput}\n                                value={password}\n                                id=\"password\"\n                                type=\"password\"\n                                required\n                            />\n                        </label>\n                        <label\n                            className={ResetPasswordPageCSS.password_change}\n                            htmlFor=\"confirmPassword\"\n                        >\n                            Re-enter password:\n                            <input\n                                className={ResetPasswordPageCSS.reset_input}\n                                name=\"confirmPassword\"\n                                onChange={handleChangeInput}\n                                value={confirmPassword}\n                                id=\"confirmPassword\"\n                                type=\"password\"\n                                required\n                            />\n                        </label>\n                        <button\n                            className={ResetPasswordPageCSS.btn_reset_password}\n                            type=\"submit\"\n                        >\n                            Submit\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ResetPasswordPage;\n","const ResetSuccessfulPage = () => {\n    return <h1> Reset Successful boi </h1>;\n};\n\nexport default ResetSuccessfulPage;\n","import React, { useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport ReportItemCSS from \"../styles/ReportItemPage.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction ReportItem() {\n    const [item, setItem] = useState({\n        name: \"\",\n        isLost: true,\n        img: [],\n        date: \"\",\n        location: \"\",\n        description: \"\",\n        err: \"\",\n        success: \"\",\n    });\n\n    const { name, isLost, img, date, location, description } = item;\n\n    const handleChangeInput = (e) => {\n        const { name, value } = e.target;\n        setItem({ ...item, [name]: value, err: \"\", success: \"\" });\n    };\n\n    const history = useHistory();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const access_res = await axios.post(\"https://lost-it.herokuapp.com/user/refresh_token\");\n            console.log(access_res);\n            const userInfo = await axios.get(\"https://lost-it.herokuapp.com/user/info\", {\n                headers: {\n                    Authorization: access_res.data.access_token,\n                },\n            });\n\n            console.log(userInfo);\n\n            const toBeReported = {\n                name: name,\n                date: date,\n                location: location,\n                description: description,\n                isLost: isLost,\n                img: img,\n                user: userInfo.data._id,\n            };\n\n            console.log(toBeReported);\n\n            const res = await axios.post(\"https://lost-it.herokuapp.com/listings/posts\", toBeReported, {\n                headers: {\n                    Authorization: access_res.data.access_token,\n                },\n            });\n            console.log(res);\n\n            setItem({ ...item, err: \"\", success: res.data.msg });\n            history.push(\"/listings\");\n        } catch (err) {\n            err.response.data.msg && setItem({ ...item, err: \"\", success: \"\" });\n        }\n    };\n\n    return (\n        <div className={ReportItemCSS.ReportItem}>\n            <MetaTags>\n                <meta charset=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n        initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>Report An Item</title>\n            </MetaTags>\n            <div className={ReportItemCSS.container}>\n                <div className={ReportItemCSS.details}>\n                    <h1>Report an Item </h1>\n                    {/* <span className={ReportItemCSS.spanbanner}>(this can be an item that you have lost, or something that you have found on your way)</span> */}\n                    <form onSubmit={handleSubmit}>\n                        <label\n                            className={ReportItemCSS.reportitem_label}\n                            htmlFor=\"location\"\n                        >\n                            Name that you can give the item :\n                            <input\n                                className={`${ReportItemCSS.location} ${ReportItemCSS.reportitem_input}`}\n                                name=\"name\"\n                                type=\"text\"\n                                value={name}\n                                onChange={handleChangeInput}\n                                required\n                            />\n                        </label>\n                        <label\n                            className={ReportItemCSS.reportitem_label}\n                            htmlFor=\"location\"\n                        >\n                            Approximate Location <br />\n                            of the Item :\n                            <input\n                                className={`${ReportItemCSS.location} ${ReportItemCSS.reportitem_input}`}\n                                name=\"location\"\n                                type=\"text\"\n                                value={location}\n                                onChange={handleChangeInput}\n                                required\n                            />\n                        </label>\n                        <label\n                            className={ReportItemCSS.reportitem_label}\n                            htmlFor=\"description\"\n                        >\n                            Description of the object :\n                            <textarea\n                                id=\"description\"\n                                className={ReportItemCSS.reportitem_textarea}\n                                name=\"description\"\n                                onChange={handleChangeInput}\n                                type=\"text\"\n                                required\n                                value={description}\n                            ></textarea>\n                        </label>\n                        <label\n                            className={ReportItemCSS.reportitem_label}\n                            htmlFor=\"date\"\n                        >\n                            Date of Happening :\n                            <input\n                                type=\"date\"\n                                className={`${ReportItemCSS.date_found} ${ReportItemCSS.small} ${ReportItemCSS.reportitem_input}`}\n                                name=\"date\"\n                                value={date}\n                                required\n                                onChange={handleChangeInput}\n                            />\n                        </label>\n                        <button\n                            className={ReportItemCSS.btn}\n                            type=\"submit\"\n                            onClick={handleSubmit}\n                        >\n                            Submit\n                        </button>\n                        <span>or</span>\n                        <button\n                            onClick={(e) => history.push(\"/listings\")}\n                            className={`${ReportItemCSS.btn} ${ReportItemCSS.right}`}\n                        >\n                            Go to listings\n                        </button>\n                    </form>\n                </div>\n                <img src=\"https://source.unsplash.com/random\" alt=\"something\" />\n            </div>\n        </div>\n    );\n}\n\nexport default ReportItem;\n","import Post from \"./Post\";\nimport axios from \"axios\";\nimport {useState, useEffect} from \"react\";\nimport {useHistory, useParams} from \"react-router-dom\";\n\nconst PostInfoPage = () => {\n    const [item, setItem] = useState({});\n    const [isOwner, setIsOwner] = useState(false);\n    const [isLost, setIsLost] = useState(\"\");\n    const [saved, setSaved] = useState(\"\");\n    const [liked, setLiked] = useState(\"\");\n    const { id } = useParams();\n    const history = useHistory();\n\n    useEffect(() => {\n        axios.post(\"https://lost-it.herokuapp.com/user/refresh_token\")\n            .then(response => {\n                axios.get(`https://lost-it.herokuapp.com/listings/post/${id}`, {\n                    headers : {\n                        Authorization : response.data.access_token\n                    }\n                })\n                .then(res => {\n                    console.log(res);\n                    axios.get(\"https://lost-it.herokuapp.com/user/info\", {\n                        headers : {\n                            Authorization : response.data.access_token\n                        }\n                    }).then(user => {\n                        if (user.data.saved.includes(id.toString())) {\n                            setSaved(true);\n                            console.log(\"saved\")\n                        } else {\n                            setSaved(false);\n                        }\n                        if (res.data.post.user === user.data._id) {\n                            setIsOwner(true)\n                        } else {\n                            setIsOwner(false);\n                        }\n                        if (res.data.post.likes.includes(user.data._id)) {\n                            setLiked(true);\n                        } else {\n                            setLiked(false);\n                        }\n                        setItem(res.data.post)\n                        setIsLost(res.data.post.isLost);\n                    }).catch(err => console.log(err))\n                })\n                .catch(err => console.log(err))\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    const handleDelete = () => {\n        const res = axios.post(\"https://lost-it.herokuapp.com/user/refresh_token\")\n                            .then(response => {\n                                axios.delete(`https://lost-it.herokuapp.com/listings/post/${id}`, {\n                                    headers : {\n                                        Authorization : response.data.access_token\n                                    }\n                                })\n                                .then(res => {\n                                    console.log(res);\n                                })\n                                .catch(err => console.log(err))\n                            })\n                            .catch(err => console.log(err));\n        console.log(res);\n        history.push(\"https://lost-it.herokuapp.com/listings\")\n    }\n\n    const handleUpdatePost = () => {\n        history.push(`https://lost-it.herokuapp.com/updatepost/${id}`);\n    }\n\n    const handleSave = () => {\n        const res = axios.post(\"https://lost-it.herokuapp.com/user/refresh_token\")\n                        .then(response => {\n                            axios.get(\"https://lost-it.herokuapp.com/user/info\", {\n                                headers : {\n                                    Authorization : response.data.access_token\n                                }\n                            })\n                            .then(r => {\n                                axios.patch(`https://lost-it.herokuapp.com/listings/savepost/${id}`, {user : r.data._id}, {\n                                    headers : {\n                                        Authorization : response.data.access_token\n                                    }\n                                })\n                                .then(res => {\n                                    alert(res.data.msg);\n                                    console.log(res);\n                                })\n                                .catch(err => console.log(err))\n                            }).catch(err => console.log(err));\n                        })\n                        .catch(err => console.log(err));\n        setSaved(true);\n        console.log(res);\n    }\n\n    const handleUnsave = () => {\n        const res = axios.post(\"https://lost-it.herokuapp.com/user/refresh_token\")\n                        .then(response => {\n                            axios.get(\"https://lost-it.herokuapp.com/user/info\", {\n                                headers : {\n                                    Authorization : response.data.access_token\n                                }\n                            })\n                            .then(r => {\n                                axios.patch(`https://lost-it.herokuapp.com/listings/unsavepost/${id}`, {user : r.data._id}, {\n                                    headers : {\n                                        Authorization : response.data.access_token\n                                    }\n                                })\n                                .then(res => {\n                                    alert(res.data.msg);\n                                    console.log(res);\n                                })\n                                .catch(err => console.log(err))\n                            }).catch(err => console.log(err));\n                        })\n                        .catch(err => console.log(err));\n        setSaved(false);\n        console.log(res);\n    }\n\n    const handleChangeStatus = () => {\n        const res = axios.post(\"https://lost-it.herokuapp.com/user/refresh_token\")\n                        .then(response => {\n                            axios.patch(`https://lost-it.herokuapp.com/listings/changestatus/${id}`, {post : id}, {\n                                headers : {\n                                    Authorization : response.data.access_token\n                                }\n                            }).then(res => {\n                                alert(res.data.msg);\n                                // window.location.reload();\n                            }).catch(err => console.log(err))\n                        }).catch(err => console.log(err))\n        setIsLost(false);\n        console.log(res);\n    }\n\n    const handleRevertStatus = () => {\n        const res = axios.post(\"https://lost-it.herokuapp.com/user/refresh_token\")\n                        .then(response => {\n                            axios.patch(`https://lost-it.herokuapp.com/listings/revertstatus/${id}`, {post : id}, {\n                                headers : {\n                                    Authorization : response.data.access_token\n                                }\n                            }).then(res => {\n                                alert(res.data.msg);\n                                // window.location.reload();\n                            }).catch(err => console.log(err))\n                        }).catch(err => console.log(err))\n        setIsLost(true);\n        console.log(res);\n    }\n\n    const handleGoBack = () => {\n        history.push(\"/listings\");\n    }\n\n    const handleLikePost = () => {\n        const res = axios.post(\"https://lost-it.herokuapp.com/user/refresh_token\")\n                        .then(response => {\n                            axios.get(\"/user/info\", {\n                                headers : {\n                                    Authorization : response.data.access_token\n                                }\n                            })\n                            .then(r => {\n                                axios.patch(`https://lost-it.herokuapp.com/listings/post/${id}/like`, {}, {\n                                    headers : {\n                                        Authorization : response.data.access_token\n                                    }\n                                })\n                                .then(res => {\n                                    alert(res.data.msg);\n                                    setLiked(true);\n                                    console.log(res);\n                                })\n                                .catch(err => console.log(err))\n                            }).catch(err => console.log(err));\n                        })\n                        .catch(err => console.log(err));\n    }\n\n    const handleUnlikePost = () => {\n        const res = axios.post(\"https://lost-it.herokuapp.com/user/refresh_token\")\n                        .then(response => {\n                            axios.get(\"/user/info\", {\n                                headers : {\n                                    Authorization : response.data.access_token\n                                }\n                            })\n                            .then(r => {\n                                axios.patch(`https://lost-it.herokuapp.com/listings/post/${id}/unlike`, {}, {\n                                    headers : {\n                                        Authorization : response.data.access_token\n                                    }\n                                })\n                                .then(res => {\n                                    alert(res.data.msg);\n                                    setLiked(false);\n                                })\n                                .catch(err => console.log(err))\n                            }).catch(err => console.log(err));\n                        })\n                        .catch(err => console.log(err));\n        \n        console.log(res);\n    }\n\n    return (\n        <div className=\"PostInfoPage\">\n            <div className=\"post_info\">\n            <Post\n                key={item._id}\n                type={item.type}\n                img={item.img}\n                date={item.date}\n                time={item.time}\n                location={item.location}\n                description={item.description}\n                likes={item.likes}\n            />\n            </div>\n            <button onClick={handleDelete}>\n                Delete Post\n            </button>\n            <button onClick={handleUpdatePost}>\n                Update Post\n            </button>\n            {\n                isOwner \n                ?   !saved\n                    ? <button onClick={handleSave}>\n                        Save Post\n                        </button>\n                    : <button onClick={handleUnsave}>\n                        Unsave Post\n                        </button>\n                : <span></span>\n            } \n            {\n                isOwner \n                ?   isLost\n                    ? <button onClick={handleChangeStatus}>\n                        Change status (to recovered)\n                        </button> \n                    : <button onClick={handleRevertStatus}>\n                        Revert status (to lost)\n                        </button> \n                : <span></span>\n            }\n            {\n                liked\n                ? <button onClick={handleUnlikePost}>\n                    Unlike Post\n                    </button>\n                : <button onClick={handleLikePost}>\n                    Like Post\n                    </button>\n            }   \n            <button onClick={handleGoBack}>\n                Go back\n            </button>\n        </div>\n    )\n}\n\nexport default PostInfoPage;","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\n\nconst MyPosts = () => {\n\n    const [toBeDisplayed, setToBeDisplayed] = useState([]);\n\n    useEffect(() => {\n        axios.post(\"https://lost-it.herokuapp.com/user/refresh_token\")\n            .then(response => {\n                axios.get(\"https://lost-it.herokuapp.com/user/info\", {\n                    headers : {\n                        Authorization : response.data.access_token\n                    }\n                }).then(res => {\n                    axios.get(`https://lost-it.herokuapp.com/listings/user_posts/${res.data._id}`, {\n                        headers : {\n                            Authorization : response.data.access_token\n                        }\n                    }).then(r => {\n                        setToBeDisplayed(r.data.posts)\n                    }).catch(err => console.log(err))\n                }).catch(err => console.log(err))\n            }).catch(err => console.log(err))\n    })\n\n    return (\n        <div>\n            {\n                toBeDisplayed.map((items) => (\n                    <Post\n                        key={items._id}\n                        type={items.type}\n                        img={items.img}\n                        date={items.date}\n                        time={items.time}\n                        location={items.location}\n                        description={items.description}\n                        link={items._id}\n                        likes={items.likes}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n\nexport default MyPosts;","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\n\nconst SavedPosts = () => {\n\n    const [toBeDisplayed, setToBeDisplayed] = useState([]);\n\n    useEffect(() => {\n        axios.post(\"https://lost-it.herokuapp.com/user/refresh_token\")\n            .then(response => {\n                axios.get(\"https://lost-it.herokuapp.com/listings/savedposts\", {\n                    headers : {\n                        Authorization : response.data.access_token\n                    }\n                }).then(r => {\n                    setToBeDisplayed(r.data.savedPosts)\n                }).catch(err => console.log(err))\n            }).catch(err => console.log(err))\n    }, []);\n\n    return (\n        <div>\n            <h1>Saved</h1>\n            {\n                toBeDisplayed.map((items) => (\n                    <Post\n                        key={items._id}\n                        type={items.type}\n                        img={items.img}\n                        date={items.date}\n                        time={items.time}\n                        location={items.location}\n                        description={items.description}\n                        link={items._id}\n                        likes={items.likes}\n                    />\n                ))\n            }\n        </div>\n    )\n}\nexport default SavedPosts;","const UpdatePost = () => {\n    return <h1>Update Post </h1>\n}\n\nexport default UpdatePost;","import React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport MetaTags from \"react-meta-tags\";\nimport ActivationSuccessfulPageCSS from \"../styles/ActivationSuccessfulPage.module.css\";\n\nconst ActivationSuccessfulPage = () => {\n    const { activation_token } = useParams();\n    const [err, setErr] = useState(\"\");\n    const [success, setSuccess] = useState(\"\");\n\n    useEffect(() => {\n        if (activation_token) {\n            const activationEmail = async () => {\n                try {\n                    const res = await axios.post(\"https://lost-it.herokuapp.com/user/activation\", {\n                        activation_token,\n                    });\n                    setSuccess(res.data.msg);\n                } catch (err) {\n                    err.response.data.msg && setErr(err.response.data.msg);\n                }\n            };\n            activationEmail();\n        }\n    }, [activation_token]);\n\n    return (\n        <div className={ActivationSuccessfulPageCSS.ActivationSuccessfulPage}>\n            <MetaTags>\n                <meta charSet=\"UTF-8\" />\n                <meta\n                    name=\"viewport\"\n                    content=\"width=device-width, \n                    initial-scale = 1.0\"\n                />\n                <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n                <title>Document</title>\n            </MetaTags>\n\n            <div className={ActivationSuccessfulPageCSS.no_scroll}>\n                <div className={ActivationSuccessfulPageCSS.auth_success}>\n                    <h1\n                        className={\n                            ActivationSuccessfulPageCSS.auth_success_text\n                        }\n                    >\n                        Activation Successful\n                    </h1>\n                    <Link to=\"/login\">Log In Here</Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ActivationSuccessfulPage;\n","import MainPage from \"./pages/MainPage\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport UserDashboardPage from \"./pages/UserDashboardPage\";\nimport DataProvider from \"./redux/store.js\";\n// import NotFound from \"./pages/NotFound\";\nimport { useSelector } from \"react-redux\";\nimport EditUserDetailsPage from \"./pages/EditUserDetailsPage\";\nimport LogoutPage from \"./pages/LogoutPage\";\nimport ListingsPage from \"./pages/ListingsPage\";\nimport EmailHasBeenSentForActivationPage from \"./pages/EmailHasBeenSentForActivationPage\";\nimport EmailHasBeenSentForResetPage from \"./pages/EmailHasBeenSentForResetPage\";\nimport ForgotPasswordPage from \"./pages/ForgotPasswordPage\";\nimport ResetPasswordPage from \"./pages/ResetPasswordPage\";\nimport ResetSuccessfulPage from \"./pages/ResetSuccessfulPage\";\nimport ReportItem from \"./pages/ReportItem\";\nimport PostInfoPage from \"./pages/PostInfoPage\";\nimport MyPosts from \"./pages/MyPosts\";\nimport SavedPosts from \"./pages/SavedPosts\";\nimport UpdatePost from \"./pages/UpdatePost\";\nimport ActivationSucessfulPage from \"./pages/ActivationSuccessfulPage\";\n\nfunction App() {\n    const auth = useSelector((state) => state.auth);\n    console.log(auth);\n    const { isLogged, isAdmin } = auth;\n\n    return (\n        <DataProvider>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={MainPage} />\n                    <Route path=\"/login\" exact component={LoginPage} />\n                    <Route path=\"/register\" exact component={RegisterPage} />\n                    <Route\n                        path=\"/userdashboard\"\n                        exact\n                        component={isLogged ? UserDashboardPage : LoginPage}\n                    />\n\n                    <Route path=\"/listings\" exact component={isLogged ? ListingsPage : LoginPage} />\n\n                    <Route path=\"/reportitem\" exact component={isLogged ? ReportItem : LoginPage} />\n\n                    <Route\n                        path=\"/emailhasbeensentforactivation\"\n                        exact\n                        component={EmailHasBeenSentForActivationPage}\n                    />\n\n                    <Route path=\"/user/activation/:activation_token\" \n                    exact \n                    component={ActivationSucessfulPage} />\n\n                    <Route\n                        path=\"/emailhasbeensentforreset\"\n                        exact\n                        component={EmailHasBeenSentForResetPage}\n                    />\n                    <Route\n                        path=\"/forgotpassword\"\n                        exact\n                        component={ForgotPasswordPage}\n                    />\n                    <Route\n                        path=\"/user/reset/:id\"\n                        exact\n                        component={ResetPasswordPage}\n                    />\n                    <Route\n                        path=\"/resetsuccessful\"\n                        exact\n                        component={ResetSuccessfulPage}\n                    />\n\n                    <Route\n                        path=\"/edituserdetails\"\n                        component={isLogged ? EditUserDetailsPage : LoginPage}\n                        exact\n                    />\n\n                    <Route path=\"/savedposts\" exact component={SavedPosts} />\n\n                    <Route path=\"/myposts\" exact component={MyPosts} />\n\n                    <Route path=\"/post/:id\" exact component={PostInfoPage} />\n\n                    <Route path=\"/updatepost/:id\" exact component={UpdatePost} />\n\n                    <Route path=\"/logout\" exact component={LogoutPage} />\n                </Switch>\n            </Router>\n        </DataProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport DataProvider from \"./redux/store.js\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <DataProvider>\n            <App />\n        </DataProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}